#!/bin/bash

set -x
set -e


#This configures an odroid to be a guest node
#check platform, have separate folders for different platforms and pass to installer below
# dpkg -i gn-wag-os/packages_o/*.deb
# cd gn-wag-os/packages_o/



# set node controller IP for "internal" network
echo "10.31.81.10" > /etc/waggle/NCIP

if [ ! -e /etc/waggle/node_id ] ; then
 source ./scripts/create_node_id.sh
fi


# workaround  (fix later):
cp /etc/waggle/node_id /etc/waggle/hostname



#mkdir /etc/waggle/
#make a random unique id and write to file
#echo $RANDOM > /etc/waggle/hostname 

# Let the user give the Odroid a new name
#read -p "Enter a name for this guest node: " name
#echo $name > /etc/hostname

#cd 
#cd waggle/guestnodes/gn-wag-os/waggled

#change this to offline install
apt-get install -y python-pip python-dev
pip install tabulate
pip install pyserial
pip install crcmod
pip install psutil

#scan for node controller IP 
#GN must be able to see node controller the first time it is configured

# not needed: python scripts/GN_scanner.py #see comments in communicator.py

# not needed like this: python scripts/GN_registration.py #send registration to node controller

#move communicator.sh into the init.d folder and update
#starts communicator process to receive and handle messages

ln -sf /usr/lib/waggle/guestnodes/scripts/communicator.sh /etc/init.d/communicator.sh
update-rc.d communicator.sh defaults 


#plug-in stuff goes here
#echo "Odroid will now reboot." 
#reboot




